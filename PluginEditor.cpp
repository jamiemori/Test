/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin editor.

  ==============================================================================
*/

#include "PluginProcessor.h"
#include "PluginEditor.h"


//==============================================================================
TestAudioProcessorEditor::TestAudioProcessorEditor (TestAudioProcessor& p)
    : AudioProcessorEditor (&p), processor (p)
{
    //set size of the window (x pixels, y pixels)
    setSize (400,400);
    
    //set the range for the sliderVolume object (min, max, increment)
    sliderVolume.setRange(-96, 0.0, 0.1);

    //set the slider style (enumerated type)
    sliderVolume.setSliderStyle (Slider::LinearVertical);

    //we don't need a text bos so set textboxstyle to notextbox
    sliderVolume.setTextBoxStyle (Slider::NoTextBox, false, 90, 0);

    sliderVolume.setTextValueSuffix ("sliderVolume");

    //add a listener in case something is changed (this pointer, pointer to itself)
    sliderVolume.addListener (this);
    
    /*
    sliderFilter.setRange(0.0, 0.49, 0.05);
    sliderFilter.setSliderStyle (Slider::RotaryVerticalDrag);
    sliderFilter.setTextBoxStyle(Slider::NoTextBox, false, 90, 0);
    */
    
    //make the object visible in the window
    addAndMakeVisible (&sliderVolume);
}

TestAudioProcessorEditor::~TestAudioProcessorEditor()
{
}

//==============================================================================
void TestAudioProcessorEditor::paint (Graphics& g)
{
    // fill the whole window white
    g.fillAll (Colours::white);
 
    // set the current drawing colour to black
    g.setColour (Colours::black);
 
    // set the font size and draw text to the screen
    g.setFont (15.0f);
 
    g.drawFittedText ("Volume Slider", 0, 0, getWidth(), 30, Justification::centred, 1);
}

void TestAudioProcessorEditor::resized()
{
    sliderVolume.setBounds(100,100,200,200);
    sliderVolume.setSize(200,200);
}

void TestAudioProcessorEditor::sliderValueChanged (Slider* sliderMoved)
{
    //get the current value of the slider and pass it to Volumedb in the processor.cpp file
        processor.Volumedb = sliderVolume.getValue();
}
